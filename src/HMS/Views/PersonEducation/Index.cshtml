@model PersonEducationViewModel
@{
    ViewData["Title"] = "تحصبلات";
    Layout = "_EditLayout";
}
<div class="Person">
    <span>اطلاعات تحصیلات</span>
    <span>@Context.Request.Query["title"]</span>
    <input type="hidden" id="PersonId" value="@Context.Request.Query["id"]" />
</div>
<div class="k-rtl">
    @(Html.Kendo().DataSource<PersonEducationViewModel>()
                .Name("PersonEducationDataSource")
                .Ajax(dataSource => dataSource
                //.Create(create => create.Action("SetPersonEducation", "PersonEducation"))
                .Read(read => read.Action("GetPersonEducation", "PersonEducation"))
                .ServerOperation(false)
                .PageSize(50)
                )
    )
    @(Html.Kendo().Grid<PersonEducationViewModel>()
                .Name("PersonEducationGrid")
                .Columns(columns =>
                {
                    columns.Bound(e => e.FieldStudyName).Width(180).Filterable(x => x.Extra(false));
                    columns.Bound(e => e.CertificateTypeName).Width(180).Filterable(x => x.Extra(false));
                    columns.Bound(e => e.DepartmentName).Width(150).Filterable(x => x.Extra(false));
                    columns.Bound(e => e.GraduatedDate).Width(180).Filterable(x => x.Extra(false));
                    columns.Bound(e => e.Average).Width(130).Filterable(x => x.Extra(false));
                    columns.Command(command =>
                    {
                        command.Custom("Edit").Click("EditPersonEducation").Text("ویرایش").IconClass("fa blue fa-edit");
                        command.Custom("Delete").Click("DeletePersonEducation").Text("حذف").IconClass("fa red fa-window-close");
                        //command.Custom("InsertPersonEducation").Click("InsertPersonEducationPersonEducation").Text("رک").IconClass("fa green fa-server");
                    });
                })
                .ToolBar(toolbar =>
                {
                    //toolbar.Excel().Text("اکسل");
                    toolbar.Custom().Text("ایجاد").Name("InsertPersonEducation");
                    //toolbar.Custom().Text("ذخیره تنظیمات").Name("SaveGridSetting");

                })
                //.Excel(x => x.FileName("لیست تحصیلات.xlsx")
                //.Filterable(true)
                //.AllPages(true))
                //.Resizable(resize => resize.Columns(true))
                //.Reorderable(reorder => reorder.Columns(true))
                .Selectable(selectable =>
                {
                    selectable.Mode(GridSelectionMode.Multiple);
                    selectable.Type(GridSelectionType.Row);
                })
                .PersistSelection(true)
                .Groupable()
                .Pageable(pageable => pageable
                .Refresh(true)
                .Input(true)
                .ButtonCount(5)
                .PageSizes(new[] { 10, 20, 30, 40, 50, 100 }))
                .Navigatable()
                .AllowCopy(true)
                .Sortable(sortable => sortable.SortMode(GridSortMode.SingleColumn))
                .Filterable(x => x
                .Messages(c => c
                .Search("جستجو")
                .SelectValue("انتخاب شده ها")
                .Info("مشخصات")
                .SelectedItemsFormat("تعداد انتخاب ها:{0}")))
                .Scrollable()
                .DataSource("PersonEducationDataSource")
    )
    <script>
        $(function () {
            var grid = $("#PersonEducationGrid").data("kendoGrid");
            $(".k-grid-SaveGridSetting").click(function (e) {
                e.preventDefault();
                localStorage["PersonEducationGrid-options"] = kendo.stringify(grid.getOptions());
            });

            $(".k-grid-InsertPersonEducation").click(function (e) {
                e.preventDefault();
                $.fancybox.open({
                    src: '@Url.Action("Create")?DataCenterId='+@Context.Request.Query["id"],
                    type: 'iframe',
                    opts: {
                        afterClose: function (instance, current, e) {
                            $('#PersonEducationGrid').data('kendoGrid').dataSource.read();
                        }
                    }
                });
            });

            function loadGridSetting (e) {
                e.preventDefault();
                var options = localStorage["PersonEducationGrid-options"];
                if (options) {
                    grid.setOptions(Json.parse(options));
                }
            }
        });
    </script>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $(".createEdit").fancybox({
            afterClose: function () {
                alert(message);
            }
        }); // close fancybox
    }); // close ready

    function EditPersonEducation(e) {
        e.preventDefault();
        var id = this.dataItem($(e.currentTarget).closest("tr")).Id;
        $.fancybox.open({
            src: '@Url.Action("Edit")/'+id,
            type: 'iframe',
            opts: {
                afterClose: function (instance, current, e) {
                    $('#PersonEducationGrid').data('kendoGrid').dataSource.read();
                }
            }
        });
    }

    function DeletePersonEducation(e) {
        e.preventDefault();
        var id = this.dataItem($(e.currentTarget).closest("tr")).Id;
        $.fancybox.open({
            src: '@Url.Action("Delete")/'+id,
            type: 'iframe',
            opts: {
                afterClose: function (instance, current, e) {
                    $('#PersonEducationGrid').data('kendoGrid').dataSource.read();
                }
            }
        });
    }

    function InsertPersonEducationPersonEducation(e) {
        e.preventDefault();
        var id = @Context.Request.Query["id"];
        //var id = $("#DataCenterId").val();
        $.fancybox.open({
            src: '@Url.Action("Create","PersonEducation")/'+id,
            type: 'iframe',
            opts: {
                afterClose: function (instance, current, e) {
                    //$('#PersonEducationGrid').data('kendoGrid').dataSource.read();
                }
            }
        });
    }

</script>
<style>
    .fa {
        margin-left: 4px;
    }

    .k-window-title {
        float: right;
        margin-right: 18px;
    }

    .Person {
        width: 100%;
        height: 64px;
        border-radius: 25px 0px 25px 0px;
        text-align: center;
        font-size: 42px;
        margin-bottom: 9px;
        background-color: hsl(174, 50%, 53%);
        color: #3F51B5;
    }

</style>
